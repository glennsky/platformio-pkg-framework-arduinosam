/*
  Copyright (c) 2014-2015 Arduino LLC.  All right reserved.

  This library is free software; you can redistribute it and/or
  modify it under the terms of the GNU Lesser General Public
  License as published by the Free Software Foundation; either
  version 2.1 of the License, or (at your option) any later version.

  This library is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  See the GNU Lesser General Public License for more details.

  You should have received a copy of the GNU Lesser General Public
  License along with this library; if not, write to the Free Software
  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
*/

/*
 * Modified 9 December 2016 by Justin Mattair
 *   for MattairTech boards (www.mattairtech.com)
 *
 * See README.md for documentation and pin mapping information
 */


#include "variant.h"

/*
 * Pins descriptions
 */
const PinDescription g_APinDescription[]=
{
	// 0..1 are unused by default (pins in use by 32.768KHz crystal, which is used by the Arduino core)
	{ PORTA,  0, PIO_DIGITAL, (PIN_ATTR_DIGITAL), No_ADC_Channel, NOT_ON_PWM, NOT_ON_TIMER, EXTERNAL_INT_NONE},
	{ PORTA,  1, PIO_DIGITAL, (PIN_ATTR_DIGITAL), No_ADC_Channel, NOT_ON_PWM, NOT_ON_TIMER, EXTERNAL_INT_NONE },
	
	// 2..9 - Analog capable pins (DAC available on 2)
	{ PORTA,  2, PIO_ANALOG, (PIN_ATTR_ANALOG|PIN_ATTR_DIGITAL), ADC_Channel0, NOT_ON_PWM, NOT_ON_TIMER, EXTERNAL_INT_NONE }, // DAC
	{ PORTA,  3, PIO_ANALOG, (PIN_ATTR_ANALOG|PIN_ATTR_DIGITAL), ADC_Channel1, NOT_ON_PWM, NOT_ON_TIMER, EXTERNAL_INT_NONE },
	{ PORTA,  4, PIO_ANALOG, (PIN_ATTR_ANALOG|PIN_ATTR_DIGITAL), ADC_Channel4, NOT_ON_PWM, NOT_ON_TIMER, EXTERNAL_INT_4 },
#if (SAMD_SERIES || SAMC_SERIES)
	{ PORTA,  5, PIO_ANALOG, (PIN_ATTR_ANALOG|PIN_ATTR_DIGITAL), ADC_Channel5, NOT_ON_PWM,  NOT_ON_TIMER, EXTERNAL_INT_5 },
#elif (SAML_SERIES)
	{ PORTA,  5, PIO_ANALOG, (PIN_ATTR_ANALOG|PIN_ATTR_DIGITAL), ADC_Channel5, NOT_ON_PWM, NOT_ON_TIMER, EXTERNAL_INT_5 },
#endif
	{ PORTA,  6, PIO_ANALOG, (PIN_ATTR_ANALOG|PIN_ATTR_DIGITAL|PIN_ATTR_TIMER), ADC_Channel6, NOT_ON_PWM, TCC1_CH0, EXTERNAL_INT_NONE }, // LED
#if (SAMD_SERIES)
	{ PORTA,  7, PIO_ANALOG, (PIN_ATTR_ANALOG|PIN_ATTR_DIGITAL|PIN_ATTR_TIMER), ADC_Channel7, NOT_ON_PWM, TCC1_CH1, EXTERNAL_INT_NONE },
	{ PORTA,  8, PIO_SERCOM, (PIN_ATTR_ANALOG|PIN_ATTR_DIGITAL|PIN_ATTR_TIMER), ADC_Channel16, NOT_ON_PWM, TCC0_CH0, EXTERNAL_INT_NMI },
	{ PORTA,  9, PIO_SERCOM, (PIN_ATTR_ANALOG|PIN_ATTR_DIGITAL|PIN_ATTR_TIMER), ADC_Channel17, NOT_ON_PWM, TCC0_CH1, EXTERNAL_INT_9 },
#elif (SAML_SERIES)
	{ PORTA,  7, PIO_ANALOG, (PIN_ATTR_ANALOG|PIN_ATTR_DIGITAL|PIN_ATTR_TIMER), ADC_Channel7, NOT_ON_PWM, TCC1_CH1, EXTERNAL_INT_NONE },
  #if defined(USE_SIX_SERCOM)
	{ PORTA,  8, PIO_SERCOM, (PIN_ATTR_ANALOG|PIN_ATTR_DIGITAL|PIN_ATTR_TIMER), ADC_Channel16, NOT_ON_PWM, TCC0_CH0, EXTERNAL_INT_NMI },
	{ PORTA,  9, PIO_SERCOM, (PIN_ATTR_ANALOG|PIN_ATTR_DIGITAL|PIN_ATTR_TIMER), ADC_Channel17, NOT_ON_PWM, TCC0_CH1, EXTERNAL_INT_9 },
  #else
	{ PORTA,  8, PIO_SERCOM, (PIN_ATTR_ANALOG|PIN_ATTR_DIGITAL|PIN_ATTR_TIMER), ADC_Channel16, NOT_ON_PWM, TCC0_CH0, EXTERNAL_INT_NMI },
	{ PORTA,  9, PIO_SERCOM, (PIN_ATTR_ANALOG|PIN_ATTR_DIGITAL|PIN_ATTR_TIMER), ADC_Channel17, NOT_ON_PWM, TCC0_CH1, EXTERNAL_INT_9 },
  #endif
#elif (SAMC_SERIES)
	{ PORTA,  7, PIO_ANALOG, (PIN_ATTR_ANALOG|PIN_ATTR_DIGITAL|PIN_ATTR_TIMER), ADC_Channel7, NOT_ON_PWM, TCC1_CH1, EXTERNAL_INT_NONE },
	{ PORTA,  8, PIO_SERCOM, (PIN_ATTR_ANALOG|PIN_ATTR_DIGITAL|PIN_ATTR_TIMER), ADC_Channel10, NOT_ON_PWM, TCC0_CH0, EXTERNAL_INT_NMI },
	{ PORTA,  9, PIO_SERCOM, (PIN_ATTR_ANALOG|PIN_ATTR_DIGITAL|PIN_ATTR_TIMER), ADC_Channel11, NOT_ON_PWM, TCC0_CH1, EXTERNAL_INT_9 },
#endif
	
	// 10..11 - SERCOM/UART (Serial1) or Analog or Digital functions
#if (SAMD_SERIES)
	{ PORTA, 10, PIO_SERCOM, (PIN_ATTR_ANALOG|PIN_ATTR_DIGITAL|PIN_ATTR_TIMER), ADC_Channel18, NOT_ON_PWM, TCC0_CH2, EXTERNAL_INT_NONE },
	{ PORTA, 11, PIO_SERCOM, (PIN_ATTR_ANALOG|PIN_ATTR_DIGITAL|PIN_ATTR_TIMER), ADC_Channel19, NOT_ON_PWM, TCC0_CH3, EXTERNAL_INT_NONE },
#elif (SAML_SERIES)
  #if defined(USE_SIX_SERCOM)
	{ PORTA, 10, PIO_SERCOM, (PIN_ATTR_ANALOG|PIN_ATTR_DIGITAL|PIN_ATTR_TIMER), ADC_Channel18, NOT_ON_PWM, TCC0_CH2, EXTERNAL_INT_NONE },
	{ PORTA, 11, PIO_SERCOM, (PIN_ATTR_ANALOG|PIN_ATTR_DIGITAL|PIN_ATTR_TIMER), ADC_Channel19, NOT_ON_PWM, TCC0_CH3, EXTERNAL_INT_NONE },
  #else
	{ PORTA, 10, PIO_SERCOM, (PIN_ATTR_ANALOG|PIN_ATTR_DIGITAL|PIN_ATTR_TIMER), ADC_Channel18, NOT_ON_PWM, TCC0_CH2, EXTERNAL_INT_NONE },
	{ PORTA, 11, PIO_SERCOM, (PIN_ATTR_ANALOG|PIN_ATTR_DIGITAL|PIN_ATTR_TIMER), ADC_Channel19, NOT_ON_PWM, TCC0_CH3, EXTERNAL_INT_NONE },
  #endif
#elif (SAMC_SERIES)
	{ PORTA, 10, PIO_SERCOM, (PIN_ATTR_ANALOG|PIN_ATTR_DIGITAL|PIN_ATTR_TIMER), ADC_Channel10, NOT_ON_PWM, TCC0_CH2, EXTERNAL_INT_NONE },
	{ PORTA, 11, PIO_SERCOM, (PIN_ATTR_ANALOG|PIN_ATTR_DIGITAL|PIN_ATTR_TIMER), ADC_Channel11, NOT_ON_PWM, TCC0_CH3, EXTERNAL_INT_NONE },
#endif
	
	// 12..13 pins don't exist
	{ NOT_A_PORT,  0, PIO_NOT_A_PIN, PIN_ATTR_NONE, No_ADC_Channel, NOT_ON_PWM, NOT_ON_TIMER, EXTERNAL_INT_NONE }, // Unused
	{ NOT_A_PORT,  0, PIO_NOT_A_PIN, PIN_ATTR_NONE, No_ADC_Channel, NOT_ON_PWM, NOT_ON_TIMER, EXTERNAL_INT_NONE }, // Unused
	
	// 14..15 - SERCOM/UART (Serial2) or Digital functions
#if (SAMD_SERIES)
	{ PORTA, 14, PIO_SERCOM, (PIN_ATTR_DIGITAL|PIN_ATTR_TIMER), No_ADC_Channel, NOT_ON_PWM, TC3_CH0, EXTERNAL_INT_14 }, // HOST_ENABLE
	{ PORTA, 15, PIO_SERCOM, (PIN_ATTR_DIGITAL|PIN_ATTR_TIMER), No_ADC_Channel, NOT_ON_PWM, TC3_CH1, EXTERNAL_INT_NONE }, // ATN
#elif (SAML_SERIES)
  #if defined(USE_SIX_SERCOM)
	{ PORTA, 14, PIO_SERCOM, (PIN_ATTR_DIGITAL|PIN_ATTR_TIMER), No_ADC_Channel, NOT_ON_PWM, TC4_CH0, EXTERNAL_INT_14 }, // HOST_ENABLE
	{ PORTA, 15, PIO_SERCOM, (PIN_ATTR_DIGITAL|PIN_ATTR_TIMER), No_ADC_Channel, NOT_ON_PWM, TC4_CH1, EXTERNAL_INT_NONE }, // ATN
  #else
	{ PORTA, 14, PIO_SERCOM, (PIN_ATTR_DIGITAL|PIN_ATTR_TIMER), No_ADC_Channel, NOT_ON_PWM, TC4_CH0, EXTERNAL_INT_14 }, // HOST_ENABLE
	{ PORTA, 15, PIO_SERCOM, (PIN_ATTR_DIGITAL|PIN_ATTR_TIMER), No_ADC_Channel, NOT_ON_PWM, TC4_CH1, EXTERNAL_INT_NONE }, // ATN
  #endif
#elif (SAMC_SERIES)
	{ PORTA, 14, PIO_SERCOM, (PIN_ATTR_DIGITAL|PIN_ATTR_TIMER), No_ADC_Channel, NOT_ON_PWM, TC4_CH0, EXTERNAL_INT_14 }, // HOST_ENABLE
	{ PORTA, 15, PIO_SERCOM, (PIN_ATTR_DIGITAL|PIN_ATTR_TIMER), No_ADC_Channel, NOT_ON_PWM, TC4_CH1, EXTERNAL_INT_NONE }, // ATN
#endif
	
	// 16..17 SERCOM/I2C (Wire) or Serial4 or Digital functions
#if (defined(FOUR_UART) && !defined(USE_SIX_SERCOM))
	{ PORTA, 16, PIO_SERCOM, (PIN_ATTR_DIGITAL|PIN_ATTR_TIMER), No_ADC_Channel, NOT_ON_PWM, TCC2_CH0, EXTERNAL_INT_0 },
	{ PORTA, 17, PIO_SERCOM, (PIN_ATTR_DIGITAL|PIN_ATTR_TIMER), No_ADC_Channel, NOT_ON_PWM, TCC2_CH1, EXTERNAL_INT_1 },
#else
	{ PORTA, 16, PIO_SERCOM, (PIN_ATTR_DIGITAL|PIN_ATTR_TIMER), No_ADC_Channel, NOT_ON_PWM, TCC2_CH0, EXTERNAL_INT_0 },
	{ PORTA, 17, PIO_SERCOM, (PIN_ATTR_DIGITAL|PIN_ATTR_TIMER), No_ADC_Channel, NOT_ON_PWM, TCC2_CH1, EXTERNAL_INT_1 },
#endif
	
	// 18..23 - SERCOM/SPI (SPI) or Digital functions (pins 20..21 do not exist)
	{ PORTA, 18, PIO_SERCOM, (PIN_ATTR_DIGITAL), No_ADC_Channel, NOT_ON_PWM, NOT_ON_TIMER, EXTERNAL_INT_2 },
	{ PORTA, 19, PIO_SERCOM, (PIN_ATTR_DIGITAL), No_ADC_Channel, NOT_ON_PWM, NOT_ON_TIMER, EXTERNAL_INT_3 },
	{ NOT_A_PORT,  0, PIO_NOT_A_PIN, PIN_ATTR_NONE, No_ADC_Channel, NOT_ON_PWM, NOT_ON_TIMER, EXTERNAL_INT_NONE }, // Unused
	{ NOT_A_PORT,  0, PIO_NOT_A_PIN, PIN_ATTR_NONE, No_ADC_Channel, NOT_ON_PWM, NOT_ON_TIMER, EXTERNAL_INT_NONE }, // Unused
#if (SAMD_SERIES)
	{ PORTA, 22, PIO_SERCOM, (PIN_ATTR_DIGITAL|PIN_ATTR_TIMER), No_ADC_Channel, NOT_ON_PWM, TC4_CH0, EXTERNAL_INT_6 },
	{ PORTA, 23, PIO_SERCOM, (PIN_ATTR_DIGITAL|PIN_ATTR_TIMER), No_ADC_Channel, NOT_ON_PWM, TC4_CH1, EXTERNAL_INT_7 },
#elif (SAML_SERIES)
  #if (defined(USE_SIX_SERCOM) && !defined(ONE_SPI))
	{ PORTA, 22, PIO_SERCOM, (PIN_ATTR_DIGITAL|PIN_ATTR_TIMER), No_ADC_Channel, NOT_ON_PWM, TCC0_CH0, EXTERNAL_INT_6 },
	{ PORTA, 23, PIO_SERCOM, (PIN_ATTR_DIGITAL|PIN_ATTR_TIMER), No_ADC_Channel, NOT_ON_PWM, TCC0_CH1, EXTERNAL_INT_7 },
  #else
	{ PORTA, 22, PIO_SERCOM, (PIN_ATTR_DIGITAL|PIN_ATTR_TIMER), No_ADC_Channel, NOT_ON_PWM, TCC0_CH0, EXTERNAL_INT_6 },
	{ PORTA, 23, PIO_SERCOM, (PIN_ATTR_DIGITAL|PIN_ATTR_TIMER), No_ADC_Channel, NOT_ON_PWM, TCC0_CH1, EXTERNAL_INT_7 },
  #endif
#elif (SAMC_SERIES)
	{ PORTA, 22, PIO_SERCOM, (PIN_ATTR_DIGITAL|PIN_ATTR_TIMER), No_ADC_Channel, NOT_ON_PWM, TCC0_CH0, EXTERNAL_INT_6 },
	{ PORTA, 23, PIO_SERCOM, (PIN_ATTR_DIGITAL|PIN_ATTR_TIMER), No_ADC_Channel, NOT_ON_PWM, TCC0_CH1, EXTERNAL_INT_7 },
#endif
	
	// 24..26 - USB_NEGATIVE and USB_POSITIVE, pin 26 does not exist
#if (SAMD_SERIES)
	{ PORTA, 24, PIO_DIGITAL, (PIN_ATTR_DIGITAL|PIN_ATTR_TIMER), No_ADC_Channel, NOT_ON_PWM, TC5_CH0, EXTERNAL_INT_NONE }, // USB/DM
	{ PORTA, 25, PIO_DIGITAL, (PIN_ATTR_DIGITAL|PIN_ATTR_TIMER), No_ADC_Channel, NOT_ON_PWM, TC5_CH1, EXTERNAL_INT_NONE }, // USB/DP
#elif (SAML_SERIES)
  #if defined(USE_SIX_SERCOM)
    #if defined(ONE_SPI)
	{ PORTA, 24, PIO_SERCOM, (PIN_ATTR_DIGITAL|PIN_ATTR_TIMER), No_ADC_Channel, NOT_ON_PWM, TCC1_CH0, EXTERNAL_INT_NONE }, // USB/DM
	{ PORTA, 25, PIO_SERCOM, (PIN_ATTR_DIGITAL|PIN_ATTR_TIMER), No_ADC_Channel, NOT_ON_PWM, TCC1_CH1, EXTERNAL_INT_NONE }, // USB/DP
    #else
	{ PORTA, 24, PIO_SERCOM, (PIN_ATTR_DIGITAL|PIN_ATTR_TIMER), No_ADC_Channel, NOT_ON_PWM, TCC1_CH0, EXTERNAL_INT_NONE }, // USB/DM
	{ PORTA, 25, PIO_SERCOM, (PIN_ATTR_DIGITAL|PIN_ATTR_TIMER), No_ADC_Channel, NOT_ON_PWM, TCC1_CH1, EXTERNAL_INT_NONE }, // USB/DP
    #endif
  #else
	{ PORTA, 24, PIO_DIGITAL, (PIN_ATTR_DIGITAL|PIN_ATTR_TIMER), No_ADC_Channel, NOT_ON_PWM, TCC1_CH0, EXTERNAL_INT_NONE }, // USB/DM
	{ PORTA, 25, PIO_DIGITAL, (PIN_ATTR_DIGITAL|PIN_ATTR_TIMER), No_ADC_Channel, NOT_ON_PWM, TCC1_CH1, EXTERNAL_INT_NONE }, // USB/DP
  #endif
#elif (SAMC_SERIES)
	{ PORTA, 24, PIO_DIGITAL, (PIN_ATTR_DIGITAL|PIN_ATTR_TIMER), No_ADC_Channel, NOT_ON_PWM, TCC1_CH0, EXTERNAL_INT_NONE }, // USB/DM
	{ PORTA, 25, PIO_DIGITAL, (PIN_ATTR_DIGITAL|PIN_ATTR_TIMER), No_ADC_Channel, NOT_ON_PWM, TCC1_CH1, EXTERNAL_INT_NONE }, // USB/DP
#endif
	{ NOT_A_PORT,  0, PIO_NOT_A_PIN, PIN_ATTR_NONE, No_ADC_Channel, NOT_ON_PWM, NOT_ON_TIMER, EXTERNAL_INT_NONE }, // Unused
	
	// 27..29 Digital functions / A/CS (pin 29 does not exist)
	{ PORTA, 27, PIO_DIGITAL, (PIN_ATTR_DIGITAL), No_ADC_Channel, NOT_ON_PWM, NOT_ON_TIMER, EXTERNAL_INT_15 }, // A/CS
#if (SAMD_SERIES || SAMC_SERIES)
	{ PORTA, 28, PIO_DIGITAL, (PIN_ATTR_DIGITAL), No_ADC_Channel, NOT_ON_PWM, NOT_ON_TIMER, EXTERNAL_INT_8 }, // 
#elif (SAML_SERIES)
	{ NOT_A_PORT,  0, PIO_NOT_A_PIN, PIN_ATTR_NONE, No_ADC_Channel, NOT_ON_PWM, NOT_ON_TIMER, EXTERNAL_INT_NONE }, // Unused
#endif
	{ NOT_A_PORT,  0, PIO_NOT_A_PIN, PIN_ATTR_NONE, No_ADC_Channel, NOT_ON_PWM, NOT_ON_TIMER, EXTERNAL_INT_NONE }, // Unused
	
	// 30..31 Digital functions / Debug interface (SWD CLK and SWD IO)
	{ PORTA, 30, PIO_SERCOM, (PIN_ATTR_DIGITAL), No_ADC_Channel, NOT_ON_PWM, NOT_ON_TIMER, EXTERNAL_INT_10 }, // SWD CLK
	{ PORTA, 31, PIO_SERCOM, (PIN_ATTR_DIGITAL), No_ADC_Channel, NOT_ON_PWM, NOT_ON_TIMER, EXTERNAL_INT_11 }, // SWD IO
};

#if (SAMD_SERIES)
const void* g_apTCInstances[TCC_INST_NUM+TC_INST_NUM]={ TCC0, TCC1, TCC2, TC3, TC4, TC5 } ;
#else
const void* g_apTCInstances[TCC_INST_NUM+TC_INST_NUM]={ TCC0, TCC1, TCC2, TC0, TC1, TC4 } ;
#endif

// Multi-serial objects instantiation
SERCOM sercom0( SERCOM0 ) ;
SERCOM sercom1( SERCOM1 ) ;
SERCOM sercom2( SERCOM2 ) ;
SERCOM sercom3( SERCOM3 ) ;
#if (SAML_SERIES)
SERCOM sercom4( SERCOM4 ) ;
SERCOM sercom5( SERCOM5 ) ;
#endif

// All microcontrollers support configurations with four SERCOM
#if !defined(USE_SIX_SERCOM)
#if defined(ONE_UART) || defined(TWO_UART) || defined(THREE_UART) || defined(FOUR_UART)
Uart Serial1( SERCOM_INSTANCE_SERIAL1, PIN_SERIAL1_RX, PIN_SERIAL1_TX, PAD_SERIAL1_RX, PAD_SERIAL1_TX ) ;

void SERCOM0_Handler()
{
  Serial1.IrqHandler();
}
#endif

#if defined(TWO_UART) || defined(THREE_UART) || defined(FOUR_UART)
Uart Serial2( SERCOM_INSTANCE_SERIAL2, PIN_SERIAL2_RX, PIN_SERIAL2_TX, PAD_SERIAL2_RX, PAD_SERIAL2_TX ) ;

void SERCOM2_Handler()
{
  Serial2.IrqHandler();
}
#endif

#if defined(THREE_UART) || defined(FOUR_UART)
Uart Serial3( SERCOM_INSTANCE_SERIAL3, PIN_SERIAL3_RX, PIN_SERIAL3_TX, PAD_SERIAL3_RX, PAD_SERIAL3_TX ) ;

void SERCOM1_Handler()
{
  Serial3.IrqHandler();
}
#endif

#if defined(FOUR_UART)
Uart Serial4( SERCOM_INSTANCE_SERIAL4, PIN_SERIAL4_RX, PIN_SERIAL4_TX, PAD_SERIAL4_RX, PAD_SERIAL4_TX ) ;

void SERCOM3_Handler()
{
  Serial4.IrqHandler();
}
#endif

// In addition to the configurations using four SERCOMs, the L21E supports USE_SIX_SERCOM
#else
Uart Serial1( SERCOM_INSTANCE_SERIAL1, PIN_SERIAL1_RX, PIN_SERIAL1_TX, PAD_SERIAL1_RX, PAD_SERIAL1_TX ) ;

void SERCOM2_Handler()
{
  Serial1.IrqHandler();
}

Uart Serial2( SERCOM_INSTANCE_SERIAL2, PIN_SERIAL2_RX, PIN_SERIAL2_TX, PAD_SERIAL2_RX, PAD_SERIAL2_TX ) ;

void SERCOM4_Handler()
{
  Serial2.IrqHandler();
}

Uart Serial3( SERCOM_INSTANCE_SERIAL3, PIN_SERIAL3_RX, PIN_SERIAL3_TX, PAD_SERIAL3_RX, PAD_SERIAL3_TX ) ;

void SERCOM0_Handler()
{
  Serial3.IrqHandler();
}

Uart Serial4( SERCOM_INSTANCE_SERIAL4, PIN_SERIAL4_RX, PIN_SERIAL4_TX, PAD_SERIAL4_RX, PAD_SERIAL4_TX ) ;

#if defined(ONE_SPI)
void SERCOM5_Handler()
#else
void SERCOM3_Handler()
#endif
{
  Serial4.IrqHandler();
}

#if defined(FIVE_UART) || defined(SIX_UART)
Uart Serial5( SERCOM_INSTANCE_SERIAL5, PIN_SERIAL5_RX, PIN_SERIAL5_TX, PAD_SERIAL5_RX, PAD_SERIAL5_TX ) ;

#if defined(ONE_SPI)
void SERCOM1_Handler()
#else
void SERCOM5_Handler()
#endif
{
  Serial5.IrqHandler();
}
#endif

#if defined(SIX_UART)
Uart Serial6( SERCOM_INSTANCE_SERIAL6, PIN_SERIAL6_RX, PIN_SERIAL6_TX, PAD_SERIAL6_RX, PAD_SERIAL6_TX ) ;

void SERCOM1_Handler()
{
  Serial6.IrqHandler();
}
#endif
#endif
